// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package piya.com.repay.domain;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import piya.com.repay.domain.Data_user_repay;

privileged aspect Data_user_repay_Roo_Finder {
    
    public static TypedQuery<Data_user_repay> Data_user_repay.findData_user_repaysByEmailLike(String email) {
        if (email == null || email.length() == 0) throw new IllegalArgumentException("The email argument is required");
        email = email.replace('*', '%');
        if (email.charAt(0) != '%') {
            email = "%" + email;
        }
        if (email.charAt(email.length() - 1) != '%') {
            email = email + "%";
        }
        EntityManager em = Data_user_repay.entityManager();
        TypedQuery<Data_user_repay> q = em.createQuery("SELECT o FROM Data_user_repay AS o WHERE LOWER(o.email) LIKE LOWER(:email)", Data_user_repay.class);
        q.setParameter("email", email);
        return q;
    }
    
    public static TypedQuery<Data_user_repay> Data_user_repay.findData_user_repaysByIdenLike(String iden) {
        if (iden == null || iden.length() == 0) throw new IllegalArgumentException("The iden argument is required");
        iden = iden.replace('*', '%');
        if (iden.charAt(0) != '%') {
            iden = "%" + iden;
        }
        if (iden.charAt(iden.length() - 1) != '%') {
            iden = iden + "%";
        }
        EntityManager em = Data_user_repay.entityManager();
        TypedQuery<Data_user_repay> q = em.createQuery("SELECT o FROM Data_user_repay AS o WHERE LOWER(o.iden) LIKE LOWER(:iden)", Data_user_repay.class);
        q.setParameter("iden", iden);
        return q;
    }
    
    public static TypedQuery<Data_user_repay> Data_user_repay.findData_user_repaysByMain_idEquals(Integer main_id) {
        if (main_id == null) throw new IllegalArgumentException("The main_id argument is required");
        EntityManager em = Data_user_repay.entityManager();
        TypedQuery<Data_user_repay> q = em.createQuery("SELECT o FROM Data_user_repay AS o WHERE o.main_id = :main_id", Data_user_repay.class);
        q.setParameter("main_id", main_id);
        return q;
    }
    
}
